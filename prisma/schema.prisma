// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  CREATED
  CANCELLED
  PROCESSING
  PENDING
  COMPLETED
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  firstName   String?
  lastName    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String
  phone       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  orders      Order[]
}

model Goods {
  id          Int             @id   @default(autoincrement())
  name        String
  quantity    Int             @default(0)
  unitPrice   Decimal         @db.Decimal(10, 2)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  deletedAt   DateTime?

  orders     GoodsInOrders[]
}

model Order {
  id          Int         @id @default(autoincrement())
  customerId  Int
  status      OrderStatus @default(CREATED)
  total       Decimal     @db.Decimal(10, 2)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?

  goods     GoodsInOrders[]
  customer    Customer    @relation(fields: [customerId], references: [id])
}

model GoodsInOrders {  
  goodsId     Int
  goods       Goods     @relation(fields: [goodsId], references: [id])
  orderId     Int
  order       Order     @relation(fields: [orderId], references: [id])
  @@id([goodsId, orderId])
}